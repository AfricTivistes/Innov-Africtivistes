---

import Badge from './badge.astro'
import Button from './button.astro'
import Card from './card.astro'
import type { Event } from '../../types/Event'

interface Props {
  event: Event
  featured?: boolean
}

const { event, featured = false } = Astro.props
---

<Card class="overflow-hidden border-none shadow-md hover:shadow-lg transition-all duration-300 group">
  <div class={`relative h-${featured ? '56' : '48'} w-full overflow-hidden`}>
    <img 
      src={event.image} 
      alt={event.title}
      class="object-cover w-full h-full group-hover:scale-105 transition-transform duration-500"
    />
    <div class="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent"></div>
    <Badge class="absolute top-3 right-3 bg-primary text-white border-none">{event.category}</Badge>
    {event.virtual && (
      <Badge class="absolute top-3 left-3 bg-secondary text-secondary-foreground border-none">
        Hybride
      </Badge>
    )}
  </div>
  
  <div class="p-4">
    <div class="flex justify-between items-start mb-2">
      <h3 class="text-xl line-clamp-2 hover:text-primary transition-colors">
        <a href={`/evenements/${event.slug}`}>{event.title}</a>
      </h3>
      <Badge variant={event.status === "À venir" ? "outline" : event.status === "En cours" ? "default" : "secondary"}>
        {event.status}
      </Badge>
    </div>
    
    <div class="flex items-center gap-2 text-xs mt-2 text-muted-foreground">
      <span class="flex items-center gap-1">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
          <line x1="16" y1="2" x2="16" y2="6"></line>
          <line x1="8" y1="2" x2="8" y2="6"></line>
          <line x1="3" y1="10" x2="21" y2="10"></line>
        </svg>
        {event.startDate} - {event.endDate}
      </span>
    </div>
    
    <p class="text-sm text-muted-foreground line-clamp-2 my-3">{event.description}</p>
    
    <div class="flex flex-col gap-2 text-xs">
      <div class="flex items-center gap-2">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3 text-primary" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"></path>
          <circle cx="12" cy="10" r="3"></circle>
        </svg>
        {event.location}
      </div>
      <div class="flex items-center gap-2">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3 text-primary" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path>
          <circle cx="9" cy="7" r="4"></circle>
          <path d="M23 21v-2a4 4 0 0 0-3-3.87"></path>
          <path d="M16 3.13a4 4 0 0 1 0 7.75"></path>
        </svg>
        {event.participants} participants attendus
      </div>
    </div>
    
    <div class="mt-4">
      <Button 
        class="w-full rounded-full bg-gradient-to-r from-primary to-accent hover:from-primary/90 hover:to-accent/90"
        disabled={!event.registrationOpen}
      >
        {event.registrationOpen ? "S'inscrire" : "Inscriptions fermées"}
      </Button>
    </div>
  </div>
</Card>